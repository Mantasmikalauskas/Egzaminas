
import User from '../models/User.js'; import jwt from 'jsonwebtoken';
const sign = u => jwt.sign({id:u._id,role:u.role}, process.env.JWT_SECRET||'supersecret',{expiresIn:'7d'});
export const register = async (req,res) => { const {name,email,password} = req.body; if(await User.findOne({email})) return res.status(400).json({message:'Email in use'}); const u = await User.create({name,email,password}); res.status(201).json({user:{id:u._id,name:u.name,email:u.email,role:u.role}, token: sign(u)}); };
export const login = async (req,res) => { const {email,password} = req.body; const u = await User.findOne({email}); if(!u) return res.status(401).json({message:'Invalid credentials'}); if(u.blocked) return res.status(403).json({message:'User blocked'}); const ok = await u.matchPassword(password); if(!ok) return res.status(401).json({message:'Invalid credentials'}); res.json({user:{id:u._id,name:u.name,email:u.email,role:u.role}, token: sign(u)}); };
export const me = async (req,res) => res.json({user:req.user}); export const listUsers = async (req,res) => { const users = await User.find().select('-password'); res.json(users); }; export const deleteUser = async (req,res) => { await User.findByIdAndDelete(req.params.id); res.json({ok:true}); }; export const blockUser = async (req,res) => { const u = await User.findById(req.params.id); u.blocked = !u.blocked; await u.save(); res.json(u); };
