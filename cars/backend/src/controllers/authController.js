import User from '../models/User.js'; import jwt from 'jsonwebtoken'; const sign = user => jwt.sign({id:user._id,role:user.role}, process.env.JWT_SECRET||'supersecret',{expiresIn:'7d'}); export const register = async (req,res)=>{ const {name,email,password} = req.body; if(await User.findOne({email})) return res.status(400).json({message:'Email in use'}); const user = await User.create({name,email,password}); res.status(201).json({user:{id:user._id,name:user.name,email:user.email,role:user.role}, token: sign(user)}); }; export const login = async (req,res)=>{ const {email,password} = req.body; const user = await User.findOne({email}); if(!user) return res.status(401).json({message:'Invalid credentials'}); const ok = await user.matchPassword(password); if(!ok) return res.status(401).json({message:'Invalid credentials'}); res.json({user:{id:user._id,name:user.name,email:user.email,role:user.role}, token: sign(user)}); }; export const me = async (req,res)=> res.json({user:req.user});